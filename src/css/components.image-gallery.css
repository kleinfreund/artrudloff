:where(image-gallery[data-js='false']) button {
	display: none !important;
}

/*
image-gallery uses a 4x2 grid layout for positioning the gallery's content and the previous and next buttons without resorting to absolutely positioning the buttons.

If there is a lot of space, the two outer columns hold the previous and next buttons while the two inner columns hold the gallery's content. In this configuration, all elements only occupy the first row. That's is why it's important to not *explicitly* define more than one row (either via `grid-template-rows` or `grid-template-areas`: this would render those extra empty rows and any gaps between them.

If there isn't a lot of space, the previous and next buttons are moved to the second row and made to occupy two cells each. This way, they can be seemingly centered by placing the previous button at flex-end and the next button at flex-start of their two cells. The gallery's content now takes up all cells of the first row.
*/
image-gallery {
	--_ig-text-color: var(--c-grey-20);
	--_ig-background-color: var(--c-white);
	--_ig-focus-color: var(--c-black);

	container-name: image-gallery;
	container-type: inline-size;
	position: relative;
	display: grid;
	grid-template-columns: min-content repeat(2, minmax(0, 1fr)) min-content;
	gap: var(--space-50);
	align-items: center;
	color: var(--_ig-text-color);
	background-color: var(--_ig-background-color);
}

image-gallery:where([data-is-overlay-open]) {
	--_ig-text-color: var(--c-white);
	--_ig-background-color: hsl(0 0% 0% / 0.95);
	--_ig-focus-color: var(--c-white);

	position: fixed;
	z-index: 1;
	inset: 0;
	padding: 0 var(--space-50);
}

:where(image-gallery:not([data-is-overlay-open])) button {
	--_button-text-color: inherit;
	--_button-background-color: transparent;
}

:where(image-gallery:not([data-is-overlay-open])) button:enabled:hover {
	--_button-text-color: var(--c-white);
	--_button-background-color: var(--c-black);
}

:where(image-gallery:not([data-is-overlay-open])) button:focus {
	--_button-border-color: var(--c-black);
}

:where(image-gallery:not([data-is-overlay-open])) button:focus:enabled:hover {
	--_button-border-color: var(--c-white);
}

.ig-open-overlay-button {
	position: absolute;
	inset-inline-end: 0;
	inset-block-start: 0;
}

:where(image-gallery:not(:hover)) .ig-open-overlay-button:where(:not(:focus)),
:where(image-gallery[data-is-overlay-open]) .ig-open-overlay-button {
	/* Use opacity to visually hide the button while allowing it to still be focused by the user. */
	opacity: 0 !important;
}

.ig-close-overlay-button {
	position: absolute;
	inset-inline-end: var(--space-50);
	inset-block-start: var(--space-50);
}

:where(image-gallery:not([data-is-overlay-open])) .ig-close-overlay-button {
	display: none !important;
}

.ig-scroll-container {
	overflow-x: auto;
	overscroll-behavior-x: contain;
	scroll-snap-type: x mandatory;
	inline-size: 100%;
	max-block-size: 100%;
	display: flex;
	align-items: stretch;
}

@container image-gallery (inline-size < 800px) {
	.ig-scroll-container {
		grid-column: 1 / -1;
		grid-row-start: 1;
	}
}

@container image-gallery (inline-size >=800px) {
	.ig-scroll-container {
		grid-column: 2 / span 2;
		grid-row-start: 1;
	}
}

.ig-scroll-container:focus {
	outline-offset: -2px;
}

:where(image-gallery[data-is-overlay-open]) .ig-scroll-container:focus {
	outline-color: var(--c-white);
}

image-gallery-item {
	scroll-snap-align: center;
	flex-basis: 100%;
	flex-shrink: 0;
	display: flex;
	justify-content: center;
	align-items: center;
}

.ig-figure {
	max-block-size: 100%;
	margin: 0;
	padding: var(--space-50);
	display: inline-flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.ig-figure>img {
	min-block-size: 0;
}

:where(image-gallery:not([data-is-overlay-open]) .ig-figure) img {
	max-block-size: 680px;
}

.ig-previous-button>svg {
	/* Visually center the chevron icon */
	transform: translateX(-2px);
}

.ig-next-button>svg {
	/* Visually center the chevron icon */
	transform: translateX(2px);
}

@container image-gallery (inline-size < 800px) {
	.ig-previous-button {
		justify-self: flex-end;
		grid-column: 1 / span 2;
		grid-row-start: 2;
	}

	.ig-next-button {
		justify-self: flex-start;
		grid-column: 3 / span 2;
		grid-row-start: 2;
	}
}

@container image-gallery (inline-size >=800px) {
	.ig-previous-button {
		grid-column-start: 1;
		grid-row-start: 1;
	}

	.ig-next-button {
		grid-column-start: 4;
		grid-row-start: 1;
	}
}
